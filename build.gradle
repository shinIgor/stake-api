buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'java-library'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'single.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JPA 관련 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' // 최신 버전 확인
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0' // 필요에 따라

	// QueryDSL 관련 의존성
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
	compileOnly "com.querydsl:querydsl-codegen:${queryDslVersion}"

	//Redis 의존성 추가
	api("org.springframework.boot:spring-boot-starter-data-redis:3.3.4")

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
// QueryDSL 설정 시작
def querydslDir = "$buildDir/generated/querydsl"

// Q 클래스 생성 디렉토리 설정
sourceSets {
	main.java.srcDir querydslDir
}

// QueryDSL 의존성 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl {
		extendsFrom compileClasspath
	}
}

// QueryDSL 컴파일 작업 등록
tasks.register('compileQuerydsl', JavaCompile) {
	source = sourceSets.main.java
	classpath = sourceSets.main.compileClasspath
	destinationDir = file(querydslDir)
	options.annotationProcessorPath = configurations.querydsl

	// 이전 QEntity 파일 삭제
	doFirst {
		file(querydslDir).deleteDir()
	}
}
// compileJava 작업에서 compileQuerydsl 작업을 직접 호출하지 않도록 변경
tasks.named('compileJava') {
	finalizedBy tasks.named('compileQuerydsl') // compileJava가 끝난 후 compileQuerydsl을 실행
}
// QueryDSL 설정 끝